=====================
Matrix Division Tests
=====================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[2, 4], [8, 10]], 2)
[[1.0, 2.0], [4.0, 5.0]]

>>> matrix_divided([[15, 21], [24, 30]], 3)
[[5.0, 7.0], [8.0, 10.0]]

>>> matrix_divided([[10, 20, 30], [40, 50, 60]], 5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

>>> matrix_divided([[5, 10, 15], [20, 25, 30]], 2)
[[2.5, 5.0, 7.5], [10.0, 12.5, 15.0]]

>>> matrix_divided([[3, 6, 9], [12, 15, 18]], 4)
[[0.75, 1.5, 2.25], [3.0, 3.75, 4.5]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'invalid_divisor')
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> matrix_divided("not_a_matrix", 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size
