====================
Add Integers Module
====================


Import module
==============
>>> add_integer = __import__('0-add_integer').add_integer


>>> add_integer(1, 3)
4
>>> 
>>> add_integer(-5, -83)
-88
>>> add_integer(-5)
93
>>> add_integer(5)
103
>>> add_integer('a', 5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Nihad\Downloads\test.py", line 8, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer('a', 'end')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Nihad\Downloads\test.py", line 8, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(13.5, 45.5)
58
>>> add_integer(99999, -99998)
1
>>> add_integer(None, -99998)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Nihad\Downloads\test.py", line 8, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(5, float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Nihad\Downloads\test.py", line 16, in add_integer
    b = int(b)
OverflowError: cannot convert float infinity to integer
>>> add_integer(5, float('NaN'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Nihad\Downloads\test.py", line 16, in add_integer
    b = int(b)
ValueError: cannot convert float NaN to integer
>>> 
